# Generated by Django 3.2.5 on 2021-08-12 20:59

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('peoples', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('active', models.BooleanField(default=True, help_text='Indique se esse item está ativo.', verbose_name='Ativo')),
                ('name', models.CharField(help_text='Adicione um nome para a prova.', max_length=100, verbose_name='Nome')),
                ('year', models.IntegerField(help_text='Selecione o ano de aplicação', verbose_name='Ano')),
                ('link', models.URLField(help_text='Adicione um link para a referência.', verbose_name='Link')),
                ('access_date', models.DateTimeField(blank=True, default=datetime.datetime.now, help_text='Adicione a data de acesso da referência.', verbose_name='Data')),
                ('uf', models.CharField(choices=[('BR', 'Brasil'), ('ND', 'Não Determinado'), ('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espirito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraiba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], help_text='Selecione o estado onde a prova foi aplicada. No caso de contemplar mais de um estado, selecione BR.', max_length=2, verbose_name='Estado')),
            ],
            options={
                'verbose_name': 'Prova',
                'verbose_name_plural': 'Provas',
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('active', models.BooleanField(default=True, help_text='Indique se esse item está ativo.', verbose_name='Ativo')),
                ('name', models.CharField(help_text='Adicione um nome para a instituição.', max_length=100, unique=True, verbose_name='Nome')),
                ('site', models.URLField(help_text='Adicione um site para a instituição.', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Instituição',
                'verbose_name_plural': 'Instituições',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('active', models.BooleanField(default=True, help_text='Indique se esse item está ativo.', verbose_name='Ativo')),
                ('short_description', models.CharField(help_text='Adicione uma breve descrição sobre a questão.', max_length=100, verbose_name='Descrição Breve')),
                ('text', models.TextField(help_text='Escreva o enunciado da questão.', verbose_name='Enunciado')),
                ('level', models.CharField(choices=[('EF', 'Ensino Fundamental'), ('EM', 'Ensino Médio'), ('ES', 'Ensino Superior')], default='EM', help_text='Selecione o nível da questão.', max_length=50, verbose_name='Nível')),
                ('exam', models.ForeignKey(help_text='Selecione a prova para qual essa questão faz parte.', on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='school.exam', verbose_name='Prova')),
            ],
            options={
                'verbose_name': 'Questão',
                'verbose_name_plural': 'Questões',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('active', models.BooleanField(default=True, help_text='Indique se esse item está ativo.', verbose_name='Ativo')),
                ('name', models.CharField(help_text='Adicione um nome para a disciplina.', max_length=100, unique=True, verbose_name='Nome')),
                ('icon', models.ImageField(help_text='Adicione um ícone para a disciplina.', upload_to='images/icons/subjects', verbose_name='Ícone')),
            ],
            options={
                'verbose_name': 'Disciplina',
                'verbose_name_plural': 'Disciplinas',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('name', models.CharField(help_text='Adicione um nome para o marcador.', max_length=100, verbose_name='Nome')),
                ('parent', models.ForeignKey(blank=True, help_text='Se for o caso, selecione um marcador superior para esse marcador.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childs', to='school.tag', verbose_name='Marcador Superior')),
                ('subject', models.ForeignKey(help_text='Selecione a discplina a qual o marcador faz parte.', on_delete=django.db.models.deletion.CASCADE, to='school.subject', verbose_name='Disciplina')),
            ],
            options={
                'verbose_name': 'Marcador',
                'verbose_name_plural': 'Marcadores',
            },
        ),
        migrations.CreateModel(
            name='QuestionTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.question', verbose_name='Questão')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.tag', verbose_name='Marcador')),
            ],
            options={
                'verbose_name': 'Marcador de Questão',
                'verbose_name_plural': 'Marcadores de Questão',
            },
        ),
        migrations.CreateModel(
            name='QuestionResolution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('active', models.BooleanField(default=True, help_text='Indique se esse item está ativo.', verbose_name='Ativo')),
                ('resolution_type', models.CharField(choices=[('Vídeo', 'Vídeo'), ('Texto', 'Texto'), ('Vídeo e Texto', 'Vídeo e Texto')], default='Vídeo', max_length=50, verbose_name='Tipo de Resolução')),
                ('text', models.TextField(blank=True, default='', help_text='Escreva o enunciado da questão.', verbose_name='Enunciado')),
                ('video_url', models.URLField(blank=True, default='', help_text='Insira um link de vídeo para a resolução.', max_length=250, verbose_name='Vídeo da Resolução')),
                ('cover_image', models.ImageField(blank=True, help_text='Insira uma imagem de capa para a resolução.', null=True, upload_to='images/covers/resolutions', verbose_name='Imagem de Capa')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resolutions', to='school.question', verbose_name='Questão')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resolutions', to='peoples.teacher', verbose_name='Professor')),
            ],
            options={
                'verbose_name': 'Resolução',
                'verbose_name_plural': 'Resoluções',
            },
        ),
        migrations.CreateModel(
            name='QuestionAlternative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Escreva o texto da alternativa.', verbose_name='Texto')),
                ('correct', models.BooleanField(default=False, help_text='Marque se essa é a alternativa correta.', verbose_name='Alternativa Correta')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alternatives', to='school.question', verbose_name='Questão')),
            ],
            options={
                'verbose_name': 'Alternativa',
                'verbose_name_plural': 'Alternativas',
            },
        ),
        migrations.AddField(
            model_name='question',
            name='subject',
            field=models.ForeignKey(help_text='Selecione a discplina a qual a questão faz parte.', on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='school.subject', verbose_name='Disciplina'),
        ),
        migrations.AddField(
            model_name='question',
            name='tags',
            field=models.ManyToManyField(through='school.QuestionTag', to='school.Tag', verbose_name='Marcadores'),
        ),
        migrations.AddField(
            model_name='exam',
            name='institution',
            field=models.ForeignKey(help_text='Selecione uma instituição para a referência.', on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='school.institution', verbose_name='Instituição'),
        ),
        migrations.AlterUniqueTogether(
            name='exam',
            unique_together={('name', 'year')},
        ),
    ]
